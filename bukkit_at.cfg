# Bukkit4Vanilla Access Transformer Configuration.
# Suffixing with -f makes something non-final.
# vim: set nobackup nowritebackup :

# CraftingManager
public td.b # CraftingManager.recipes - so we can clear recipes.
public-f td.a # CraftingManager.instance - to reset the CraftingManager
public td.<init>()V # reset CraftingManager.

# DedicatedServer
public ft.o # DedicatedServer.settings - to reload the settings of the server

# World
public up.H # World.spawnPeacefulMobs - world-by-world settings
public up.G # World.spawnHostileMobs - world-by-world settings
public-f up.w # World.provider - change environment (bukkit does this, god knows why)

# ServerConfigurationManager
public et.k # lets us directly load player NBTTagCompounds for reading.
public aco.n # lets us get fire ticks for an entity

# Entity
public jn.af # let us get if a creeper is powered or not (Entity.dataWatcher)
public jn.c # let us get if an entity is on fire or not

# EntityThrowable
public oo.c # lets us set and get an EntityThrowable's throwing entity

# EntityPigZombie
public nv.d # lets us get and set a PigZombie's anger.

# Packet26EntityExperienceOrb
public bh.e # lets us get and set an XP orb's value.

# EntityLiving
public jw.bp # lets us get and set the last damage of a LivingEntity
public jw.bb # lets us get/set the last attacking EntityPlayer
public jw.aV # lets us get/set the XP worth of a LivingEntity.

# EntityPlayer
public og.bS # sleeping

# EntityTracker
public gm.b # trackedEntities

# EntityPlayerMP
public gu.f # lets us look at the chunks

# BlockDispenser
public afp.c(Lup;IIILjava/util/Random;)V # dispense an item...

# ChunkProviderServer
public gq.b(Lwl;)V # lets us save a __SINGLE__ chunk
public gq.b # lets us inspect chunks to unload
public gq.d # currentChunkProvider
public gq.c # default empty chunk
public gq.f # long hash map of chunks
public gq.g # loaded chunks

# PlayerManager
public go.a(IIZ)Lgp; # getOrCreateChunkWatcher


# PlayerInstance
public gp.b # playersInChunk
public gp

# PlayerManager
public go.a(IIZ);Lgp # get or create chunk watcher

# PlayerInstance
public gp.b # playersInChunk

# InventoryLargeChest
public iw.b # Upper and lower parts of the chest
public iw.c # <-- (lower part)

# World
public up.w # does this de-final the field? (World.provider)

# FoodStats
public ou.c # get exhaustionlevel

# PlayerCapabilities
public oe.g # set walk speed

# EntityXPOrb
public ju.e
